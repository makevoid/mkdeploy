%html
  %head
    %meta{ charset: "utf-8 "}
    %title Raudo - Deploy your apps easily
    %link{ rel:"stylesheet", href:"bower_components/materialize/dist/css/materialize.min.css", type:"text/css" }
    %link{ rel:"stylesheet", href: "bower_components/fontawesome/css/font-awesome.min.css", type: "text/css" }
    %link{ rel:"stylesheet", href:"http://fonts.googleapis.com/css?family=Montserrat:400,700"}
    %link{ rel:"stylesheet", href:"main.css", type:"text/css" }
  %body.blue.darken-2

    %nav.blue.darken-2
      %div.nav-wrapper
        %a.brand-logo.navbar-logo
          &nbsp;Raudo
        %a.button-collapse{href: "#", :data => {"activates" => "nav-mobile"}}
          %i.mdi-navigation-menu
        %ul.right.hide-on-med-and-down
          %li
            %a{ href: "/apps" }     Apps
          %li
            %a{ href: "/machines" } Machines
          %li
            %a{ href: "/domains" }  Domains
        %ul.side-nav#nav-mobile.font-20
          %li
            %a{ href: "/apps" }
              .blue-text.mdi-action-extension
                %span.grey-text.text-darken-2 Apps
          %li
            %a{ href: "/machines" }
              .blue-text.mdi-action-dns
                %span.grey-text.text-darken-2 Machines
          %li
            %a{ href: "/domains" }
              .blue-text.mdi-action-language
                %span.grey-text.text-darken-2 Domains

    %section.content
      = yield
    %script{src: "bower_components/jquery/dist/jquery.min.js"}
    %script{src: "bower_components/materialize/dist/js/materialize.min.js"}

    :javascript

      //TODO mad pls put it where you desireee

      $(document).ready(function () {

        $('.button-collapse').sideNav();
        $('.collapsible').collapsible({
            'accordion': false // A setting that changes the collapsible behavior to expandable instead of the default accordion style
        });
      });

      var filter = function(nodes, fn) {
        return Array.prototype.filter.call(nodes, fn);
      }
      var siblings = function(node) {
        return filter(node.parentNode.children, function (child) { return child !== node; });
      }
      var toggle = function(node, className) {
        node.classList.toggle(className);
      }
      var onToggle = function(evt){
        var sibling = siblings( evt.currentTarget )[0]
        toggle(sibling, "hidden")
      }


      // main

      document.addEventListener("DOMContentLoaded", function(event) {
        // togglers

        var toggles = document.querySelectorAll(".toggler")
        var arr = []
        arr.forEach.call(toggles, function(toggle){
          toggle.addEventListener("click", onToggle)
        })
      })
