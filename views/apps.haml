%h4.row.blue-text Apps
.row
  %a{ href: "/apps" } Installed
  |
  %a{ href: "#/apps_definitions" } Definitions
  %a.right{ href: "javascript:void(0)" } Add app [+]


.row.hidden
  %h3 New app

.row
  %ul.collapsible.active{ data: { collapsible: "accordion" } }
    - AppInstance.all.each do |app|
      %li
        .collapsible-header
          %i.mdi-image-filter-drama
          &nbsp;#{app.name}
        .collapsible-body
          .separator15
          .col.s12
            .col.s1
            .col.s10
              :ruby
                # Task.all
                # Task.sub.all
                H = Hashie::Mash

                tasks = H.new(
                  main: %w(
                    deploy
                    restart
                    setup
                  ),
                  sub:  H.new(
                    db: %w(
                      create
                      migrate
                    ),
                  ))

                # +
                # db_create
                # db_migrate

                # app_tasks > submenu

              :css
                .left {
                  float: left;
                }
                .clear {
                  clear: both;
                }

              %h4 Actions
              -#   | Tasks

              :css
                .btn.left {
                  margin: 5px;
                }
                .inset {
                  margin-left: 15px;
                }
                .relative {
                  position: relative;
                }

              .mk_progress.hidden
                .progress_bar
                .progress_text

              %ul.inset
                - for task in tasks.main
                  %li.btn.action.left{ data: { action_name: task } }
                    = task
                .clear
                .separator30

                %h5 DB
                %ul
                  - for task_db in tasks.sub.db
                    %li.btn.action.left{ data: { action_name: task_db } }
                      = task_db
                  .clear

                .separator30
                .separator30
                .btn Settings
                .separator15
                %input{ name: "repo", placeholder: "username/repo (github)", type: "text" }
              .separator30



    /
      %li
        .collapsible-header
          %i.mdi-image-filter-drama
          &nbsp; Asd app
        .collapsible-body
          %p Lorem ipsum dolor sit amet
      %li
        .collapsible-header
          %i.mdi-image-filter-drama
          &nbsp;Such app
        .collapsible-body
          %p Lorem ipsum dolor sit amet


  -# %section= app.name

:javascript


  var progress      = document.querySelector(".container .mk_progress")
  var progress_bar  = document.querySelector(".container .mk_progress .progress_bar")
  var progress_text = document.querySelector(".container .mk_progress .progress_text")
  var onAction = function(evt) {
    var action = evt.target.dataset.actionName
    progress.classList.remove("hidden")
    progress_bar.style.top = progress.offsetTop
    progress_text.innerHTML = "executing: <span>"+action+"</span> ..."

    var app = { name: "mkdeploy" };
    actionRequest(app)
  }
  var buttons = document.querySelectorAll(".container .btn.action")
  var arr = []
  arr.forEach.call(buttons, function(button){
    button.addEventListener("click", onAction)
  })


  // xhr
  var actionRequest = function(app){
    var oReq = new XMLHttpRequest()
    oReq.onload = reqListener
    var body = { name: "restart" }
    oReq.open("post", "/apps/"+app.id+"/actions", body)
    oReq.send();
  }

  function reqListener () {
    console.log("got: "+this.responseText)
    setTimeout(function() {
      console.log("ended: "+this.responseText)
      progress.classList.add("hidden")
    }, 2000)
  }

  // router
  var route = /\/apps\/([\w_]+)\/actions/
  if (location.pathname.match(route)) {
    var match = route.exec(location.pathname)[1]
    var action = document.querySelector(".btn[data-action-name='"+match+"']")


    var elements = document.querySelectorAll(".hidden")
    var arr = []
    arr.forEach.call(elements, function(elem){
      elem.classList.remove("hidden")
      elem.dispatchEvent("click")

      var evt = document.createEvent("MouseEvents");
      evt.initMouseEvent("click", true, true, window, 1, 0, 0, 0, 0,
          false, false, false, false, 0, null);
      elem.dispatchEvent(evt);
    })

    // action.trigger("click")
  }
